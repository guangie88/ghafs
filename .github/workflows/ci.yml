name: CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:
    strategy:
      matrix:
        version:
        - go: "1.12.x"
          platform: ubuntu-latest
          goos: linux
          goarch: amd64
        - go: "1.12.x"
          platform: macos-latest
          goos: linux
          goarch: amd64
        - go: "1.13.x"
          platform: ubuntu-latest
          goos: linux
          goarch: amd64
        - go: "1.13.x"
          platform: macos-latest
          goos: linux
          goarch: amd64
    runs-on: "${{ matrix.version.platform }}"
    steps:
    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: "${{ matrix.version.go }}"
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Build executable
      run: go build -v ./...
      env:
        GOOS: "${{ matrix.version.goos }}"
        GOARCH: "${{ matrix.version.goarch }}"
        CGO_ENABLED: "0"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: experimental
        release_name: Experimental releases
        draft: false
        prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # This pulls from the CREATE RELEASE step above
        # referencing it's ID to get its outputs object, which include a `upload_url`
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./ghafs
        asset_name: "ghafs_${{ matrix.version.goos }}_${{ matrix.version.goarch }}_${{ github.ref }}"
        asset_content_type: application/octet-stream
